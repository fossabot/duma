
TODO:
test Makefile since 2.4.5
modification of manual page efence.3.

CHANGES:

2.4.7 get to work with Borland Free Commandline Tools (Borland C++ Builder 5.5)
      thrown away unnecessary declarations of malloc(), free(), .. Borland didn't like them,
        and neither MS-Visual C++ 6.0 nor gcc (Dev-C++) needs them.
      added project files in subdir "win32-vide" for VIDE 1.24 using Borland C++
      Builder 5.5 (see http://www.objectcentral.com)
      (2002-11-22, HA)

2.4.6 remove memory leak in eftest
      allowed re-inclusion of efence.h after inclusion of efenceint.h
      added some project files in subdir "win32-devcpp" for Dev-C++ 4.9.6 using gcc
        (see http://www.bloodshed.net) and saved its generated makefiles
      left tstheap's memory leaks
      (2002-11-17, HA)

2.4.5 modifications in print routines (EF_Print, EF_Abort, ..)
      added direct output to visual c++ debug output window.
	  some additions to Makefile
      (2002-11-17, HA)

2.4.4 several modifications
        seperation of c++ files: efencepp.h, efencepp.cpp
        renamed EF_push()/EF_pop() to EF_newFrame()/EF_delFrame()
        new compile option "EF_NO_LEAKDETECTION"
        new compile option "EF_NO_CPP"
        splitted efence.h to efence.h and efenceint.h
        added Copyright and License information to many files
        renamed COPYING to COPYING-GPL
      (2002-11-03, HA)

2.4.3 added following PreProcessor Macros for Release and Debug Mode
        #define NEW_ELEM(TYPE)          new TYPE
        #define NEW_ARRAY(TYPE,COUNT)   new (TYPE)[COUNT]
        #define DEL_ELEM(PTR)           delete PTR
        #define DEL_ARRAY(PTR)          delete []PTR
      which are mapped to malloc() and free() in Debug Mode.
      Use these macros to get filename and linenumber of a C++ style memory leak.
      (2002-10-07, HA)

2.4.2 added support for implicit and explicit leak checking:
        void EF_push(void)  creates a new memory frame.
        void EF_pop(void)   checks for memory leaks allocated after EF_push().
                            this function is called automatically onexit(), even without EF_push().
      (2002-10-07, HA)

2.4.1 Port to Windows (NT/2000/XP) by adding sections to following functions
      Page_AllowAccess(), Page_Create(), Page_Delete(), Page_DenyAccess(), Page_Size()
      (2002-10-06, HA)

2.4.0 added support for C++ operators new, new[], delete and delete[].
      added some project files in subdir "win32-msvc" for MS-Visual C++ 6.0      
      (2002-10-03, HA)



2.2.2	Oops. Shared library must be position-independent code.

2.2.0
	Merge in bug-fixes, multi-thread patch, shared library patch,
	debian/ subdirectory used for building the Debian package

2.0.1
	Add work-arounds for kernel and library bugs under HP-UX.	
	HP has been notified and will repair these soon.

2.0.2
	Add support for DEC Alpha. Add %a pattern for printing addresses, which
	assumes they are passed in a void *.

2.0.3 30-Sep-1993
	When realloc is passed a zero address, it should work the same
	way as malloc(). Fix forward declaration of mprotect() in page.c to
	use void *, not caddr_t, for addresses. IRIX 5.0.1 complained about that.

2.0.4 29-May-1994
	Don't attempt to allow access to a zero-sized page when
	EF_ALLOW_MALLOC_0 is set. Attempt to un-map memory from
	Page_Delete(). If that doesn't work, fall back by protecting the
	page from all references. Un-mapping small segments of a mapping
	used to crash my SGI IRIX 5.0 system. I assume that nobody is running
	5.0 any longer.

2.0.5 20-January-1995
	Port to Linux.
